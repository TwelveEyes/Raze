name: Continuous Integration

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: ${{ matrix.config.name }} | ${{ matrix.config.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: Linux Clang 15
          os: ubuntu-22.04
          extra_options: -DCMAKE_C_COMPILER=clang-15 -DCMAKE_CXX_COMPILER=clang++-15
          deps_cmdline: sudo apt update && sudo apt install clang-15 libsdl2-dev libvpx-dev libwebp-dev
          build_type: Release

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Dependencies
      shell: bash
      run: |
        if [[ -n "${{ matrix.config.deps_cmdline }}" ]]; then
          eval ${{ matrix.config.deps_cmdline }}
        fi
        mkdir build
        export ZMUSIC_PACKAGE=zmusic-1.1.14-linux.tar.xz
        cd build
        wget -q "https://github.com/coelckers/gzdoom/releases/download/ci_deps/${ZMUSIC_PACKAGE}"
        tar -xf "${ZMUSIC_PACKAGE}"

    - name: Configure
      shell: bash
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -DCMAKE_PREFIX_PATH=`pwd`/build/zmusic -DPK3_QUIET_ZIPDIR=ON ${{ matrix.config.extra_options }} .

    - name: Build
      shell: bash
      run: |
        export MAKEFLAGS=--keep-going
        cmake --build build --config ${{ matrix.config.build_type }} --parallel 3

    - name: Create Package
      shell: bash
      run: |
        cd build
        mkdir package
        cp raze *.pk3 package

    - name: Upload Package
      uses: actions/upload-artifact@v4
      with:
        path: build/package
        name: ${{ matrix.config.name }} ${{ matrix.config.build_type }}

    - name: List Build Directory
      if: always()
      shell: bash
      run: |
        git status
        ls -lR build
